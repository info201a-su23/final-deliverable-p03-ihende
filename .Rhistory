shiny::runApp()
maternity_df <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv", stringsAsFactors = FALSE)
runApp()
library(dplyr)
library(plotly)
library(ggplot2)
maternity_df <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv", stringsAsFactors = FALSE)
server <- function(input, output) {
output$maternity_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% input$country_select)
maternity_plot <- ggplot(selected_df) +
geom_col(aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
))
maternity_plotly <- ggplotly(maternity_plot)
return(maternity_plotly)
})
}
introduction_tab_panel <- tabPanel("Introduction",
h1("TO DO: Add introduction here.")
)
graph1_tab_panel <- tabPanel("First graph",
h1("Maternity Leave By Country"),
sidebarLayout(
sidebarPanel(
h2("Options for Graph"),
selectInput(inputId = "country_select",
label = "Select Countries",
choices = maternity_df$Country.Name,
selected = "Bulgaria",
multiple = TRUE)
),
mainPanel(
h2("Maternity Leave by Country Plot"),
plotlyOutput(outputId = "maternity_plotly")
)
))
graph2_tab_panel <- tabPanel("Second graph",
h1("TO DO: Add another graph here.")
)
graph3_tab_panel <- tabPanel("Third graph",
h1("TO DO: Add another graph here.")
)
conclusion_tab_panel <- tabPanel("Conclusion/Summary Takeaways",
h1("TO DO: Add conclusion here.")
)
ui <- navbarPage("Maternity Leave",
introduction_tab_panel,
graph1_tab_panel,
graph2_tab_panel,
graph3_tab_panel,
conclusion_tab_panel
)
library(shiny)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
View(maternity_df)
selected_df <- maternity_df %>%
filter(Country.Name %in% input$country_select)
output$maternity2_plotly <- renderPlotly({
output$maternity2_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% "Italy")
maternity_plot <- ggplot(selected_df) +
geom_col(aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
))
maternity2_plotly <- ggplotly(maternity2_plot)
return(maternity_plotly)
return(maternity2_plotly)
output$maternity2_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% "Italy")
maternity_plot <- ggplot(selected_df) +
geom_col(aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
))
maternity2_plotly <- ggplotly(maternity2_plot)
return(maternity2_plotly)
graph1_tab_panel <- tabPanel("First graph",
h1("Maternity Leave By Country"),
sidebarLayout(
sidebarPanel(
h2("Options for Graph"),
selectInput(inputId = "country_select",
label = "Select Countries",
choices = maternity_df$Country.Name,
selected = "Bulgaria",
multiple = TRUE)
),
mainPanel(
h2("Maternity Leave by Country Plot"),
plotlyOutput(outputId = "maternity_plotly")
)
))
graph2_tab_panel <- tabPanel("Second graph",
h1("Maternity Leave By Country"),
sidebarLayout(
sidebarPanel(
h2("Options for Graph"),
selectInput(inputId = "country_select",
label = "Select Countries",
choices = maternity_df$Country.Name,
selected = "Bulgaria",
multiple = TRUE)
),
mainPanel(
h2("Maternity Leave by Country Plot"),
plotlyOutput(outputId = "maternity2_plotly")
)
))
output$maternity_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% input$country_select)
maternity_plot <- ggplot(selected_df) +
geom_col(aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
))
maternity_plotly <- ggplotly(maternity_plot)
return(maternity_plotly)
})
output$maternity2_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% "Italy")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Downloads/shinyapp')
shiny::runApp()
clinics_df <- read.csv("cities.csv", stringsAsFactors = FALSE)
runApp()
library(plotly)
library(dplyr)
library(plotly)
library(ggplot2)
clinics_df <- read.csv("cities.csv", stringsAsFactors = FALSE)
server <- function(input, output) {
output$clinics1_plotly <- renderPlotly({
summarized_df <- clinics_df %>%
group_by(state) %>%
summarize(avg_12_gestation_time = mean(gestation_12_duration)) %>%
filter(state %in% input$state_select)
clinics1_plot <- ggplot(summarized_df) +
geom_col(aes(x = state,
y = avg_12_gestation_time,
fill = state)) +
labs(x = "State", y = "Average 12-week Driving Time (hours)", fill = "Key")
clinics1_plotly <- ggplotly(clinics1_plot)
return(clinics1_plotly)
})
output$clinics2_plotly <- renderPlotly({
# Code for second graph goes here
})
output$clinics3_plotly <- renderPlotly({
# Code for third graph goes here
})
}
library(shiny)
library(shinythemes)
introduction_tab_panel <- tabPanel("Introduction",
h1("TO DO: Add introduction here.")
)
graph1_tab_panel <- tabPanel("Average Distance by State (12 Weeks)",
h1("Average Driving Time (hours) to Nearest Clinic at 12 Weeks Gestation"),
p("This chart shows the average driving time to the nearest abortion clinic
at 12 weeks gestation for the selected state(s). Users can select as many
or as little states as they wish to observe. This visual was designed to
allow users to observe patterns and disparities across different states or
regions and give them an idea of what abortion clinic access at 12 weeks
looks like in various locations. The variability of this chart can also
allow users to draw conclusions or make inferences regarding the impacts of
individual state government policies on abortion access."),
sidebarLayout(
sidebarPanel(
h2("State Selector"),
selectInput(inputId = "state_select",
label = "Select State(s)",
choices = clinics_df$state,
selected = "Washington",
multiple = TRUE)
),
mainPanel(
h2("Average Distance (hours) at 12 Weeks Gestation by State Plot"),
plotlyOutput(outputId = "clinics1_plotly")
)
))
graph2_tab_panel <- tabPanel("Second graph",
h1("TO DO: Add another graph here.")
)
graph3_tab_panel <- tabPanel("Third graph",
h1("TO DO: Add another graph here.")
)
conclusion_tab_panel <- tabPanel("Conclusion/Summary Takeaways",
h1("TO DO: Add conclusion here.")
)
ui <- navbarPage(
theme = shinytheme("superhero"),
"Driving Times to Abortion Clinics in the U.S. - How Far is Too Far?",
introduction_tab_panel,
graph1_tab_panel,
graph2_tab_panel,
graph3_tab_panel,
conclusion_tab_panel
)
runApp()
clinics_df <- read.csv("cities.csv", stringsAsFactors = FALSE)
new_clinics_df <- clinics_df %>%
select(state, gestation_8_duration, gestation_12_duration, gestation_16_duration, gestation_20_duration)
pivot_df <- new_clinics_df %>%
pivot_longer(!c(state,
names_to = "gestation",
values_to = "duration"))
library(tidy)
library(tidyverse)
clinics_df <- read.csv("cities.csv", stringsAsFactors = FALSE)
new_clinics_df <- clinics_df %>%
select(state, gestation_8_duration, gestation_12_duration, gestation_16_duration, gestation_20_duration)
pivot_df <- new_clinics_df %>%
pivot_longer(!c(state,
names_to = "gestation",
values_to = "duration"))
pivot_df <- new_clinics_df %>%
pivot_longer(!c(state),
names_to = "gestation",
values_to = "duration"))
pivot_df <- new_clinics_df %>%
pivot_longer(!c(state),
names_to = "gestation",
values_to = "duration")
View(pivot_df)
runApp()
runApp()
View(maternity_df)
View(server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()

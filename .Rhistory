shiny::runApp()
maternity_df <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv", stringsAsFactors = FALSE)
runApp()
library(dplyr)
library(plotly)
library(ggplot2)
maternity_df <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/maternity-leave-2021.csv", stringsAsFactors = FALSE)
server <- function(input, output) {
output$maternity_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% input$country_select)
maternity_plot <- ggplot(selected_df) +
geom_col(aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
))
maternity_plotly <- ggplotly(maternity_plot)
return(maternity_plotly)
})
}
introduction_tab_panel <- tabPanel("Introduction",
h1("TO DO: Add introduction here.")
)
graph1_tab_panel <- tabPanel("First graph",
h1("Maternity Leave By Country"),
sidebarLayout(
sidebarPanel(
h2("Options for Graph"),
selectInput(inputId = "country_select",
label = "Select Countries",
choices = maternity_df$Country.Name,
selected = "Bulgaria",
multiple = TRUE)
),
mainPanel(
h2("Maternity Leave by Country Plot"),
plotlyOutput(outputId = "maternity_plotly")
)
))
graph2_tab_panel <- tabPanel("Second graph",
h1("TO DO: Add another graph here.")
)
graph3_tab_panel <- tabPanel("Third graph",
h1("TO DO: Add another graph here.")
)
conclusion_tab_panel <- tabPanel("Conclusion/Summary Takeaways",
h1("TO DO: Add conclusion here.")
)
ui <- navbarPage("Maternity Leave",
introduction_tab_panel,
graph1_tab_panel,
graph2_tab_panel,
graph3_tab_panel,
conclusion_tab_panel
)
library(shiny)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
View(maternity_df)
selected_df <- maternity_df %>%
filter(Country.Name %in% input$country_select)
output$maternity2_plotly <- renderPlotly({
output$maternity2_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% "Italy")
maternity_plot <- ggplot(selected_df) +
geom_col(aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
))
maternity2_plotly <- ggplotly(maternity2_plot)
return(maternity_plotly)
return(maternity2_plotly)
output$maternity2_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% "Italy")
maternity_plot <- ggplot(selected_df) +
geom_col(aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
))
maternity2_plotly <- ggplotly(maternity2_plot)
return(maternity2_plotly)
graph1_tab_panel <- tabPanel("First graph",
h1("Maternity Leave By Country"),
sidebarLayout(
sidebarPanel(
h2("Options for Graph"),
selectInput(inputId = "country_select",
label = "Select Countries",
choices = maternity_df$Country.Name,
selected = "Bulgaria",
multiple = TRUE)
),
mainPanel(
h2("Maternity Leave by Country Plot"),
plotlyOutput(outputId = "maternity_plotly")
)
))
graph2_tab_panel <- tabPanel("Second graph",
h1("Maternity Leave By Country"),
sidebarLayout(
sidebarPanel(
h2("Options for Graph"),
selectInput(inputId = "country_select",
label = "Select Countries",
choices = maternity_df$Country.Name,
selected = "Bulgaria",
multiple = TRUE)
),
mainPanel(
h2("Maternity Leave by Country Plot"),
plotlyOutput(outputId = "maternity2_plotly")
)
))
output$maternity_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% input$country_select)
maternity_plot <- ggplot(selected_df) +
geom_col(aes(x = Value,
y = reorder(Country.Name, +Value),
fill = Country.Name,
))
maternity_plotly <- ggplotly(maternity_plot)
return(maternity_plotly)
})
output$maternity2_plotly <- renderPlotly({
selected_df <- maternity_df %>%
filter(Country.Name %in% "Italy")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Downloads/shinyapp')
